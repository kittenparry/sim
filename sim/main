#!/usr/bin/env python3

import sys
import curses

def main():
	world = []
	for x in range(6):
		world.append([' ', ' ', ' ', ' '])
	
	world[0][1] = 'D'
	world[1][1] = 'C'
	world[3][2] = 'G'




	stdscr = curses.initscr()
	curses.start_color()
	curses.use_default_colors()
	curses.init_pair(1, curses.COLOR_BLACK, curses.COLOR_GREEN)
	curses.init_pair(2, curses.COLOR_BLACK, curses.COLOR_RED)
	curses.cbreak() # this enables keys working by themselves without enter
	stdscr.keypad(1) # this enables listening for keys
	stdscr.nodelay(1) # removes wait for getch()

	stdscr.addstr(0, 10, 'Hit \'q\' to quit')
	stdscr.addstr(1, 10, 'Words sound so hollow in the cold.')
	stdscr.refresh()

	timer = 0;
	key = ''
	while key != ord('q'):
		key = stdscr.getch()
		stdscr.addstr(2, 10, str(timer))
		for y in range(len(world)):
			for i, x in enumerate(world[y]):
				stdscr.addstr(y, i, str(x), curses.color_pair(1))

		stdscr.refresh()
		curses.napms(1000) # delays input rather than letting them skip cycle, including q
		timer += 1

	curses.endwin()


if __name__ == '__main__':
	main()
